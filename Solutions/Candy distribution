#include<bits/stdc++.h>
#include <limits>
using namespace std;
typedef unsigned long long int ull;
typedef long long int ll;
typedef long double ld;
#define f(i, n) for( ll i=0 ; i<n ; i++ )
#define fa(i, a, b) for( ll i=a ; i<b ; i++ )
#define pb push_back
#define MOD 1000000007
 
//const ll MAX = 10000005;
//vector <bool> isPrime(MAX+1, true);
 
void faster(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
}
 
ll expo(ll a, ll b, ll c = MOD) {
	ll ans = 1;
	while(b != 0) {
		if(b % 2 == 1) {
			ans *= a;
			ans %= c;
		}
		a = a * a;
		a %= c;
		b /= 2;
	}
	return ans;
}
 
ll nCr(ll n, ll r) {
	ll p = 1, k = 1;
	if(n - r < r)
		r = n - r;
	if(r != 0) {
		while(r) {
			p *= n;
			k *= r;
			ll g = __gcd(p, k);
			p /= g;
			k /= g;
			n--;
			r--;
		}
	}
	else
		p = 1;
	return p;
}
 
ll fact(ll n) {
	if(n == 1 || n == 0) {
		return 1;
	}
	return n * fact(n - 1);
}
 
ll dearrange(ll n) {
	ll ans = 0;
	f(i, n + 1) {
		ans += pow(-1, i) * (fact(n) / fact(i));
	}
	return ans;
}
 
ll prod(ll a, ll b, ll c = MOD) {
	ll ans = 0;
	while(b != 0) {
		if(b % 2 == 1) {
			ans += a;
			ans %= c;
		}
		a = a + a;
		a %= c;
		b /= 2;
	}
	return ans;
}

ll n, k;
vector <ld> arr;

bool check(ld e) {
	ll count = 1;
	ld pos = arr[0] + e * 2;
	fa(i, 1, n) {
		if(arr[i] > pos) {
			pos = arr[i] + e * 2;
			count++;
		}
	}
	return count <= k;
}
 
int main() {
	faster();
	
	cin >> n >> k;
	f(i, n) {
		ld temp;
		cin >> temp;
		arr.pb(temp);
	}
	sort(arr.begin(), arr.end());
	ld hi, lo, mid, ans;
	lo = 0; hi = arr[n-1] - arr[0];
	while((hi - lo) > 0.0000001) {
		mid = lo + ((hi-lo) / 2);
		if(check(mid)) {
			hi = mid;
			ans = mid;
		}
		else
			lo = mid;
	}
	cout << fixed << setprecision(9);
	cout << ans;
	
}