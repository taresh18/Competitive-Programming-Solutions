// Implementing Sieve of Eratosthenes

#include <bits/stdc++.h> 
using namespace std; 

// Function to implement Sieve of Eratosthenes  
void sieve(int n) 
{ 
    // Create a boolean array isPrime, which tells the number equals to ith index is prime or not 
    vector <bool> isPrime(n+1, true);
  	
  	// making 0 and 1 as not primes
  	isPrime[0] = false; isPrime[1] = false;
  	
    for (int i = 2; i * i <= n; i++) 
    {  
        if (isPrime[i]) 
        { 
            // Update all multiples of i greater than or  
            // equal to the square of it   
            for (int j = i*i; j <= n; j += i) 
                isPrime[j] = false; 
        } 
    } 

    for (int i = 0; i <= n; i++) 
       if (isPrime[i]) 
          cout << i << " "; 
} 
  
// Main function 
int main() 
{ 
    // taking input upto which number we have to print prime numbers
    int n;
    cin >> n;  
    sieve(n); 
    return 0; 
} 