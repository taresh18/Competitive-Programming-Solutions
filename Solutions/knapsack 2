#include<bits/stdc++.h>
#include <limits>
using namespace std;
typedef unsigned long long int ull;
typedef long long int ll;
typedef long double dll;
#define f(i, n) for( ll i=0 ; i<n ; i++ )
#define fa(i, a, b) for( ll i=a ; i<b ; i++ )
#define pb push_back
#define MOD 1000000007
 
//const ll MAX = 10000005;
//vector <bool> isPrime(MAX+1, true);
 
void faster(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
}
 
ll expo(ll a, ll b, ll c = MOD) {
	ll ans = 1;
	while(b != 0) {
		if(b % 2 == 1) {
			ans *= a;
			ans %= c;
		}
		a = a * a;
		a %= c;
		b /= 2;
	}
	return ans;
}
 
ll nCr(ll n, ll r) {
	ll p = 1, k = 1;
	if(n - r < r)
		r = n - r;
	if(r != 0) {
		while(r) {
			p *= n;
			k *= r;
			ll g = __gcd(p, k);
			p /= g;
			k /= g;
			n--;
			r--;
		}
	}
	else
		p = 1;
	return p;
}
 
ll fact(ll n) {
	if(n == 1 || n == 0) {
		return 1;
	}
	return n * fact(n - 1);
}
 
ll dearrange(ll n) {
	ll ans = 0;
	f(i, n + 1) {
		ans += pow(-1, i) * (fact(n) / fact(i));
	}
	return ans;
}
 
ll prod(ll a, ll b, ll c = MOD) {
	ll ans = 0;
	while(b != 0) {
		if(b % 2 == 1) {
			ans += a;
			ans %= c;
		}
		a = a + a;
		a %= c;
		b /= 2;
	}
	return ans;
}




 
int main() {
	faster();

	ll n, W;
	cin >> n >> W;
	vector <ll> w, v;
	ll dp[n+1][100005];
	w.pb(-1); v.pb(-1);
	f(i, n) {
		ll a, b;
		cin >> a >> b;
		w.pb(a);
		v.pb(b);
	}
	f(i, n+1) {
		f(j, 100005) {
			if(j == 0)
				dp[i][j] = 0;
			else
			 dp[i][j] = MOD;
		} 
	}
	
	fa(i, 1, n+1) {
		fa(j, 1, 100005) {
			if(j - v[i] >= 0) 
				dp[i][j] = min(dp[i-1][j-v[i]] + w[i], dp[i-1][j]);
			else
				dp[i][j] = dp[i-1][j];
		}
	}
	ll ans = -1;
	f(j, 100005) {
		if(dp[n][j] <= W)
			ans = max(ans, j); 
	}
	cout << ans;
}